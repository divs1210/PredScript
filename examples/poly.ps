// ==================================
// new predicates
// ==================================
function isEven(x: isInt): isBool {
    x % 2 == 0
}

function isOdd(x: isInt): isBool {
    !isEven(x)
}

// isEven and isOdd derive from isInt
derive(isInt, isEven);
derive(isInt, isOdd);


// ==================================
// an increment function
// ==================================
function inc(x: isInt): isInt {
    x + 1
}

// it can now be overridden
// for our new predicates!

function inc(x: isEven): isOdd {
    // integer addition
    x + 1
}

function inc(x: isOdd): isEven {
    // integer addition
    x + 1
}

let incInt: isInt = inc(1);
println("incInt: " + type(incInt) + " " + incInt);

let even: isEven = 2;
let incEven: isOdd = inc(even);
println("incEven: " + type(incEven) + " " + incEven);

let odd: isOdd = 3;
let incOdd: isEven = inc(odd);
println("incOdd: " + type(incOdd) + " " + incOdd);